{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IAccessTokenData": {
				"properties": {
					"token": {
						"type": "string"
					},
					"user": {},
					"wallet": {},
					"refreshToken": {
						"type": "string"
					}
				},
				"required": [
					"token",
					"refreshToken"
				],
				"type": "object",
				"additionalProperties": false
			},
			"DetailedError": {
				"properties": {
					"message": {
						"type": "string"
					},
					"standardizedErrorCode": {
						"type": "string"
					}
				},
				"required": [
					"message",
					"standardizedErrorCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServerResponse_IAccessTokenData_": {
				"properties": {
					"status": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/IAccessTokenData"
					},
					"error": {
						"type": "string"
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/DetailedError"
						},
						"type": "array"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ISignupDto": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"emailAddress": {
						"type": "string"
					},
					"phoneNumber": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"lastName",
					"emailAddress",
					"phoneNumber",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ILoginDto": {
				"properties": {
					"emailAddress": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"emailAddress",
					"password"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaymentInitializeResponse": {
				"properties": {
					"paymentProviderRedirectUrl": {
						"type": "string"
					},
					"paymentReference": {
						"type": "string"
					},
					"accessCode": {
						"type": "string"
					}
				},
				"required": [
					"paymentProviderRedirectUrl",
					"paymentReference",
					"accessCode"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServerResponse_PaymentInitializeResponse_": {
				"properties": {
					"status": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/PaymentInitializeResponse"
					},
					"error": {
						"type": "string"
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/DetailedError"
						},
						"type": "array"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaymentInitializeVariant": {
				"enum": [
					"FUND_MAIN_WALLET"
				],
				"type": "string"
			},
			"PaymentInitialize": {
				"properties": {
					"paymentVariant": {
						"$ref": "#/components/schemas/PaymentInitializeVariant"
					},
					"amountMajor": {
						"type": "number",
						"format": "double",
						"nullable": true
					}
				},
				"required": [
					"paymentVariant"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServerResponse_void_": {
				"properties": {
					"status": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {},
					"error": {
						"type": "string"
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/DetailedError"
						},
						"type": "array"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Pick_PaystackDedicatedNuban.Exclude_keyofPaystackDedicatedNuban.id__": {
				"properties": {
					"uuid": {
						"type": "string"
					},
					"userId": {
						"type": "number",
						"format": "double"
					},
					"dedicatedNubanPayload": {},
					"bankId": {
						"type": "string"
					},
					"bankName": {
						"type": "string"
					},
					"bankAccountNumber": {
						"type": "string"
					},
					"bankAccountName": {
						"type": "string"
					},
					"paystackCustomerId": {
						"type": "string"
					},
					"paystackIntegration": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"uuid",
					"userId",
					"bankId",
					"bankName",
					"bankAccountNumber",
					"bankAccountName",
					"paystackCustomerId",
					"paystackIntegration",
					"createdAt",
					"updatedAt"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"Omit_PaystackDedicatedNuban.id_": {
				"$ref": "#/components/schemas/Pick_PaystackDedicatedNuban.Exclude_keyofPaystackDedicatedNuban.id__",
				"description": "Construct a type with the properties of T except for those in type K."
			},
			"IServerResponse_Omit_PaystackDedicatedNuban.id__": {
				"properties": {
					"status": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/Omit_PaystackDedicatedNuban.id_"
					},
					"error": {
						"type": "string"
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/DetailedError"
						},
						"type": "array"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServerResponse__currency-string.currencySymbol-string.amountMajor-number__": {
				"properties": {
					"status": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"properties": {
							"amountMajor": {
								"type": "number",
								"format": "double"
							},
							"currencySymbol": {
								"type": "string"
							},
							"currency": {
								"type": "string"
							}
						},
						"required": [
							"amountMajor",
							"currencySymbol",
							"currency"
						],
						"type": "object"
					},
					"error": {
						"type": "string"
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/DetailedError"
						},
						"type": "array"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PaymentTransactionTypes": {
				"enum": [
					"external_to_fund_wallet",
					"escrow_to_refund_buyer",
					"wallet_funds_withdrawal"
				],
				"type": "string"
			},
			"FinancialTransactionMetadata": {
				"properties": {
					"orderUuid": {
						"type": "string"
					},
					"temporaryOrderUuid": {
						"type": "string"
					},
					"productLeaseId": {
						"type": "number",
						"format": "double"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"TransactionFlowType": {
				"enum": [
					"in",
					"out"
				],
				"type": "string"
			},
			"IFinancialTransactionResponseDto": {
				"properties": {
					"uuid": {
						"type": "string"
					},
					"type": {
						"$ref": "#/components/schemas/PaymentTransactionTypes"
					},
					"amountMajor": {
						"type": "number",
						"format": "double"
					},
					"currency": {
						"type": "string"
					},
					"currencySymbol": {
						"type": "string"
					},
					"walletBalanceMajorBefore": {
						"type": "number",
						"format": "double"
					},
					"walletBalanceMajorAfter": {
						"type": "number",
						"format": "double"
					},
					"metadata": {
						"$ref": "#/components/schemas/FinancialTransactionMetadata"
					},
					"paidStatus": {},
					"description": {
						"type": "string"
					},
					"flowType": {
						"$ref": "#/components/schemas/TransactionFlowType"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"uuid",
					"type",
					"amountMajor",
					"currency",
					"currencySymbol",
					"walletBalanceMajorBefore",
					"walletBalanceMajorAfter",
					"metadata",
					"paidStatus",
					"description",
					"flowType",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IPaginatedList_IFinancialTransactionResponseDto_": {
				"properties": {
					"pageNumber": {
						"type": "number",
						"format": "double"
					},
					"total": {
						"type": "number",
						"format": "double"
					},
					"pageSize": {
						"type": "number",
						"format": "double"
					},
					"dataset": {
						"items": {
							"$ref": "#/components/schemas/IFinancialTransactionResponseDto"
						},
						"type": "array"
					}
				},
				"required": [
					"pageNumber",
					"total",
					"pageSize",
					"dataset"
				],
				"type": "object",
				"additionalProperties": false
			},
			"IServerResponse_IPaginatedList_IFinancialTransactionResponseDto__": {
				"properties": {
					"status": {
						"type": "boolean"
					},
					"message": {
						"type": "string"
					},
					"data": {
						"$ref": "#/components/schemas/IPaginatedList_IFinancialTransactionResponseDto_"
					},
					"error": {
						"type": "string"
					},
					"errors": {
						"items": {
							"$ref": "#/components/schemas/DetailedError"
						},
						"type": "array"
					}
				},
				"required": [
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"SortOrder": {
				"enum": [
					"ASC",
					"DESC"
				],
				"type": "string"
			}
		},
		"securitySchemes": {
			"jwt": {
				"type": "apiKey",
				"name": "x-access-token",
				"in": "header"
			}
		}
	},
	"info": {
		"title": "Wallet",
		"version": "1.0.0",
		"description": "Wallet Service Backend",
		"contact": {
			"name": "Mubarak Aminu"
		}
	},
	"openapi": "3.0.0",
	"paths": {
		"/api/auth/users/signup": {
			"post": {
				"operationId": "AgentSignup",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServerResponse_IAccessTokenData_"
								}
							}
						}
					}
				},
				"tags": [
					"Auth Service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ISignupDto"
							}
						}
					}
				}
			}
		},
		"/api/auth/users/signin": {
			"post": {
				"operationId": "AgentSignin",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServerResponse_IAccessTokenData_"
								}
							}
						}
					}
				},
				"tags": [
					"Auth Service"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ILoginDto"
							}
						}
					}
				}
			}
		},
		"/api/payments/paystack/initialize": {
			"post": {
				"operationId": "InitializePaystackPayment",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServerResponse_PaymentInitializeResponse_"
								}
							}
						}
					}
				},
				"tags": [
					"Payments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PaymentInitialize"
							}
						}
					}
				}
			}
		},
		"/api/payments/paystack/verify/webhook": {
			"post": {
				"operationId": "VerifyPaystackTransaction",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServerResponse_void_"
								}
							}
						}
					}
				},
				"tags": [
					"Payments"
				],
				"security": [],
				"parameters": []
			}
		},
		"/api/payments/paystack/dedicated-account": {
			"get": {
				"operationId": "DedicatedAccount",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServerResponse_Omit_PaystackDedicatedNuban.id__"
								}
							}
						}
					}
				},
				"tags": [
					"Payments"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/wallet/main/balance": {
			"get": {
				"operationId": "MainWalletBalance",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServerResponse__currency-string.currencySymbol-string.amountMajor-number__"
								}
							}
						}
					}
				},
				"tags": [
					"Wallet"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": []
			}
		},
		"/api/wallet/transactions": {
			"get": {
				"operationId": "FinancialTransactions",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IServerResponse_IPaginatedList_IFinancialTransactionResponseDto__"
								}
							}
						}
					}
				},
				"tags": [
					"Wallet"
				],
				"security": [
					{
						"jwt": []
					}
				],
				"parameters": [
					{
						"in": "query",
						"name": "pageNumber",
						"required": true,
						"schema": {
							"type": "string"
						}
					},
					{
						"in": "query",
						"name": "sortOrder",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/SortOrder"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}